[ { "prover": "why3:Z3", "verdict": "timeout", "time": 10. },
  { "prover": "script", "verdict": "valid" },
  { "prover": "alt-ergo", "verdict": "timeout", "time": 10. },
  { "header": "Cut", "tactic": "Wp.cut",
    "params": { "case": "MODUS",
                "clause": { "select": "compose", "id": "wp:eq",
                            "args": [ { "select": "inside-goal", "occur": 0,
                                        "target": "(havoc Mint_undef_0 Mint_16[(shift_uint32 cutpoints_1 0)->0]\n  (shift_uint32 cutpoints_1 1) length_2)[(shift_uint32 cutpoints_1 res_2)\n  ->length_2][(shift_uint32 cutpoints_1 ((to_uint32 (1+res_2))-2))]",
                                        "pattern": "[][=]shift_uint32havocshift_uint32" },
                                      { "select": "inside-step", "at": 34,
                                        "kind": "have", "occur": 0,
                                        "target": "(havoc Mint_undef_0 Mint_16[(shift_uint32 cutpoints_1 0)->0]\n  (shift_uint32 cutpoints_1 1) length_2)\n  [(shift_uint32 cutpoints_1 (res_2-1))]",
                                        "pattern": "[]havocshift_uint32$Mint_undef[=]" } ] } },
    "select": null,
    "children": { "Assume": [ { "prover": "alt-ergo", "verdict": "timeout",
                                "time": 10. },
                              { "header": "Cut", "tactic": "Wp.cut",
                                "params": { "case": "MODUS",
                                            "clause": { "select": "compose",
                                                        "id": "wp:eq",
                                                        "args": [ { "select": "inside-goal",
                                                                    "occur": 1,
                                                                    "target": "(havoc Mint_undef_0 Mint_16[(shift_uint32 cutpoints_1 0)->0]\n  (shift_uint32 cutpoints_1 1) length_2)[(shift_uint32 cutpoints_1 res_2)\n  ->length_2][(shift_uint32 cutpoints_1 ((to_uint32 (1+res_2))-1))]",
                                                                    "pattern": "[][=]shift_uint32havocshift_uint32" },
                                                                  { "select": "inside-step",
                                                                    "at": 34,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "length_2",
                                                                    "pattern": "$length" } ] } },
                                "select": null,
                                "children": { "Assume": [ { "prover": "alt-ergo",
                                                            "verdict": "timeout",
                                                            "time": 10. },
                                                          { "header": "Definition",
                                                            "tactic": "Wp.unfold",
                                                            "params": {},
                                                            "select": 
                                                              { "select": "clause-step",
                                                                "at": 34,
                                                                "kind": "have",
                                                                "target": "let a_0 =\n    (havoc Mint_undef_0 Mint_16[(shift_uint32 cutpoints_1 0)->0]\n      (shift_uint32 cutpoints_1 1) length_2) in\n(P_monotone_slice a_0 a_2 a_0[(shift_uint32 cutpoints_1 (res_2-1))] length_2)",
                                                                "pattern": "P_monotone_slicehavoc$a[]$length" },
                                                            "children": 
                                                              { "Unfold 'P_monotone_slice'": 
                                                                  [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "let a_0 =\n    (havoc Mint_undef_0 Mint_16[(shift_uint32 cutpoints_1 0)->0]\n      (shift_uint32 cutpoints_1 1) length_2)[(shift_uint32 cutpoints_1 res_2)\n      ->length_2] in\n(P_monotone_slice a_0 a_2\n  a_0[(shift_uint32 cutpoints_1 ((to_uint32 (1+res_2))-2))] length_2)",
                                                                    "pattern": "P_monotone_slice[=]$a[]$lengthhavoc" },
                                                                    "children": {} } ] } } ] } } ] } } ]
