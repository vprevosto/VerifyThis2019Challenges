[ { "header": "Cut", "tactic": "Wp.cut",
    "params": { "case": "CASES",
                "clause": { "select": "compose", "id": "wp:eq",
                            "args": [ { "select": "inside-goal", "occur": 0,
                                        "target": "1+i_24",
                                        "pattern": "+1$i" },
                                      { "select": "inside-goal", "occur": 0,
                                        "target": "sidx_5",
                                        "pattern": "$sidx" } ] } },
    "select": null,
    "children": { "Positive": [ { "prover": "Alt-Ergo:2.0.0",
                                  "verdict": "valid", "time": 1.7327,
                                  "steps": 1560 } ],
                  "Negative": [ { "header": "Cut", "tactic": "Wp.cut",
                                  "params": { "case": "MODUS",
                                              "clause": { "select": "compose",
                                                          "id": "wp:lt",
                                                          "args": [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "1+i_24",
                                                                    "pattern": "+1$i" },
                                                                    { "select": "inside-step",
                                                                    "at": 0,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "sidx_5",
                                                                    "pattern": "$sidx" } ] } },
                                  "select": null,
                                  "children": { "Clause": [ { "prover": "Alt-Ergo:2.0.0",
                                                              "verdict": "valid",
                                                              "time": 0.3617,
                                                              "steps": 298 } ],
                                                "Assume": [ { "header": "Instance",
                                                              "tactic": "Wp.instance",
                                                              "params": 
                                                                { "P1": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 1,
                                                                    "target": "i_24",
                                                                    "pattern": "$i" },
                                                                  "P2": 
                                                                    { "select": "inside-step",
                                                                    "at": 3,
                                                                    "kind": "have",
                                                                    "occur": 1,
                                                                    "target": "i_25",
                                                                    "pattern": "$i" },
                                                                  "P3": null,
                                                                  "P4": null,
                                                                  "P5": null,
                                                                  "P6": null,
                                                                  "P7": null,
                                                                  "P8": null,
                                                                  "P9": null,
                                                                  "P10": null },
                                                              "select": 
                                                                { "select": "clause-step",
                                                                  "at": 12,
                                                                  "kind": "have",
                                                                  "target": "let a_0 =\n    (havoc Mint_undef_0\n      (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n      (shift_uint32 stack_1 0) length_1) in\nforall i_0:int.\nlet a_1 = a_0[(shift_uint32 stack_1 (1+i_0))] in\n(0<=i_0) -> ((2+i_0)<=sidx_0)\n-> (forall i_1:int.\n    (a_0[(shift_uint32 stack_1 i_0)]<=i_1) -> ((2+i_1)<=a_1)\n    -> (Mint_3[(shift_sint32 s_2 (a_1-1))]<=Mint_3[(shift_sint32 s_2 i_1)]))",
                                                                  "pattern": "\\F><=<=\\F0#1+$sidx>2#1<=<=<=[]#0" },
                                                              "children": 
                                                                { "Instance": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(2+i_24)<=sidx_0",
                                                                    "pattern": "<=+$sidx2$i" } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0255,
                                                                    "steps": 57 } ],
                                                                    "Assume": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(2+i_25)<=\n(havoc Mint_undef_0\n  (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n  (shift_uint32 stack_1 0) length_1)[(shift_uint32 stack_1 (1+i_24))]",
                                                                    "pattern": "<=+[]2$ihavocshift_uint32$Mint_undef" } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-step",
                                                                    "at": 3,
                                                                    "kind": "have",
                                                                    "occur": 1,
                                                                    "target": "let a_0 =\n    (havoc Mint_undef_0\n      (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n      (shift_uint32 stack_1 0) length_1) in\na_0[(shift_uint32 left_0 x_3)\n  ->a_0[(shift_uint32 stack_1 (to_uint32 (sidx_5-1)))]]\n  [(shift_uint32 stack_1 sidx_5)->(to_uint32 (1+x_3))]\n  [(shift_uint32 stack_1 (1+i_24))]",
                                                                    "pattern": "[][=]shift_uint32[=]shift_uint32" },
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(havoc Mint_undef_0\n  (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n  (shift_uint32 stack_1 0) length_1)[(shift_uint32 stack_1 (1+i_24))]",
                                                                    "pattern": "[]havocshift_uint32$Mint_undefhavoc" } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "compose",
                                                                    "id": "wp:get",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 =\n    (havoc Mint_undef_0\n      (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n      (shift_uint32 stack_1 0) length_1) in\na_0[(shift_uint32 left_0 x_3)\n  ->a_0[(shift_uint32 stack_1 (to_uint32 (sidx_5-1)))]]",
                                                                    "pattern": "[=]havocshift_uint32[]$Mint_undef" },
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(shift_uint32 stack_1 (1+i_24))",
                                                                    "pattern": "shift_uint32$stack+1$i" } ] },
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 =\n    (havoc Mint_undef_0\n      (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n      (shift_uint32 stack_1 0) length_1) in\na_0[(shift_uint32 left_0 x_3)\n  ->a_0[(shift_uint32 stack_1 (to_uint32 (sidx_5-1)))]]\n  [(shift_uint32 stack_1 sidx_5)->(to_uint32 (1+x_3))]\n  [(shift_uint32 stack_1 (1+i_24))]",
                                                                    "pattern": "[][=]shift_uint32[=]shift_uint32" } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:not",
                                                                    "args": 
                                                                    [ { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "1+i_24",
                                                                    "pattern": "+1$i" },
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "sidx_5",
                                                                    "pattern": "$sidx" } ] } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Assume": 
                                                                    [ { "header": "Array",
                                                                    "tactic": "Wp.array",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 =\n    (havoc Mint_undef_0\n      (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n      (shift_uint32 stack_1 0) length_1) in\na_0[(shift_uint32 left_0 x_3)\n  ->a_0[(shift_uint32 stack_1 (to_uint32 (sidx_5-1)))]]\n  [(shift_uint32 stack_1 sidx_5)->(to_uint32 (1+x_3))]\n  [(shift_uint32 stack_1 (1+i_24))]",
                                                                    "pattern": "[][=]shift_uint32[=]shift_uint32" },
                                                                    "children": 
                                                                    { "Same Indices": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Diff Indices": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ] } } ],
                                                                    "Assume": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:not",
                                                                    "args": 
                                                                    [ { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(shift_uint32 left_0 x_3)",
                                                                    "pattern": "shift_uint32$left$x" },
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(shift_uint32 stack_1 (1+i_24))",
                                                                    "pattern": "shift_uint32$stack+1$i" } ] } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "header": "Separated",
                                                                    "tactic": "Wp.separated",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 5,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(separated (shift_uint32 stack_1 0) length_1 (shift_uint32 left_0 0)\n  length_1)",
                                                                    "pattern": "separatedshift_uint32$lengthshift_uint32" },
                                                                    "children": 
                                                                    { "WrongBase": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.052,
                                                                    "steps": 112 } ],
                                                                    "OnLeft": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0659,
                                                                    "steps": 113 } ],
                                                                    "OnRight": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0634,
                                                                    "steps": 113 } ],
                                                                    "OverLap": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ],
                                                                    "Assume": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0331,
                                                                    "steps": 60 } ] } } ] } } ],
                                                                    "Assume": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0281,
                                                                    "steps": 59 } ] } } ],
                                                                    "Assume": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(havoc Mint_undef_0\n  (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n  (shift_uint32 stack_1 0) length_1)[(shift_uint32 stack_1 i_24)]<=i_25",
                                                                    "pattern": "<=[]$ihavocshift_uint32$Mint_undef" } },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(havoc Mint_undef_0\n  (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n  (shift_uint32 stack_1 0) length_1)[(shift_uint32 stack_1 i_24)]<=i_25",
                                                                    "pattern": "<=[]$ihavocshift_uint32$Mint_undef" },
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.2787,
                                                                    "steps": 371 } ],
                                                                    "Assume": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ null,
                                                                    null ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Assume": 
                                                                    [ { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 =\n    (havoc Mint_undef_0\n      (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n      (shift_uint32 stack_1 0) length_1) in\na_0[(shift_uint32 left_0 x_3)\n  ->a_0[(shift_uint32 stack_1 (to_uint32 (sidx_5-1)))]]\n  [(shift_uint32 stack_1 sidx_5)->(to_uint32 (1+x_3))]\n  [(shift_uint32 stack_1 (1+i_24))]",
                                                                    "pattern": "[][=]shift_uint32[=]shift_uint32" },
                                                                    { "select": "inside-step",
                                                                    "at": 13,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(havoc Mint_undef_0\n  (havoc Mint_undef_1 Mint_19 (shift_uint32 left_0 0) length_1)\n  (shift_uint32 stack_1 0) length_1)[(shift_uint32 stack_1 (1+i_24))]",
                                                                    "pattern": "[]havocshift_uint32$Mint_undefhavoc" } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Clause": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.3051,
                                                                    "steps": 438 } ],
                                                                    "Assume": 
                                                                    [ { "prover": "Alt-Ergo:2.0.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0351,
                                                                    "steps": 62 } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ]
